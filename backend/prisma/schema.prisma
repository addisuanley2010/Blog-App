datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  username   String   @unique
  status     String   @default("OFFLINE")
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  profile    Profile? 
  posts      Post[]
  comments   Coment[]
  likes      Like[]
}

model Profile {
  id       Int     @id @default(autoincrement())
  name     String
  gender   String
  age      Int
  avatar   String? 
  bio      String?
  userId   Int     @unique
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Post{
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  authorId  Int      
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade,onUpdate: Cascade)
  comments  Coment[]
  likes     Like[]
}

model Coment{
  id  Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  authorId Int 
  postId Int 
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade,onUpdate: Cascade)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade,onUpdate: Cascade)

}

model Like{
  id Int @id @default(autoincrement())
  userId Int
  postId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade,onUpdate: Cascade)
  author User @relation(fields: [userId], references: [id], onDelete: Cascade,onUpdate: Cascade)
}